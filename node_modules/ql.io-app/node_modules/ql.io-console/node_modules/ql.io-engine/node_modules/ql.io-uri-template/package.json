{
  "author": {
    "name": "ql.io"
  },
  "description": "A small URI template processor for ql.io.",
  "name": "ql.io-uri-template",
  "version": "0.8.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/ql-io/ql.io"
  },
  "main": "lib/uri-template.js",
  "engines": {
    "node": "> 0.8.2"
  },
  "dependencies": {},
  "devDependencies": {
    "nodeunit": "0.7.4",
    "underscore": "1.3.3"
  },
  "readme": "This module provides a small URI template parser. ql.io uses URI templates for specifying URIs of\nAPIs. See [docs](http://ql.io/docs/uri-template) for more examples.\n\n## Syntax Overview\n\nHere is overview of the syntax.\n\n1. Each template can have an arbitrary number of tokens enclosed in braces (`{` and `}`).\n\n    http://myserver/somepath?p1={v1}&p2={v2}\n\n2. You can generate URIs from URI templates by calling the `format()` function with an object\n   containing values, and optionally, default values.\n\n3. All tokens are optional and single valued by default.\n\n4. You can mark that a token is required by prefixing the name of the token with `^`. When the\n   value for a required token is missing, formatting will fail.\n\n    http://myserver/somepath?p1={^v1}&p2={v2}\n\n5. You can also mark that a token is multi-valued by prefixing the name of the token with a `|`.\n\n    http://myserver/somepath?p2={|v2}\n\nIf the value of `v2` is `['v2_1','v2_2']`, calling the `format()` would result in\n\n    http://myserver/somepath?p2=v2_1,v2_2\n\nSome APIs may not take more than a given number of values. In such cases, you can specify a maximum\ninteger before `|`.\n\n    http://myserver/somepath?p1={^v1}&p2={5|v2}\n\nIf you supply more than 5 values, the `format()` function will return `Math.ceil(n/5)` URIs.\n",
  "readmeFilename": "README.md",
  "_id": "ql.io-uri-template@0.8.0",
  "_from": "ql.io-uri-template@0.8.0"
}
