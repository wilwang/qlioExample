{
  "name": "uri",
  "version": "0.1.0",
  "directories": {
    "lib": "."
  },
  "author": {
    "name": "webr3"
  },
  "main": "./uris.js",
  "readme": "URI Type for javascript\n====================================================\n - Supports all kinds of URI (URL, URN, any scheme).\n - Relative URI Resolution\n - All classes extend the native String implementation.\n - Pure ECMA-262 implementation of URI spec (RFC-3986)\n - Works Client or Server side, (V8 / node.js compatible).\n \n\nUsage:\n \n  var u = new URI('http://user:pass@github.com/webr3/URI?query=string#this');\n \nURI extends the native String implementation, so 'u' is a string, and you can call all the normal\nString methods like u.indexOf(), u.match(), u.substr() and so forth.\n\nIn addition, URI exposes the following URI specific methods for reading parts of a URI (each of\nwhich are strings themselves): \n\n  u.scheme();                            -> 'http:'\n  u.heirpart();                          -> '//user:pass@github.com/webr3/URI'\n  u.heirpart().authority();              -> 'user:pass@github.com'\n  u.heirpart().authority().userinfo();   -> 'user:pass'\n  u.heirpart().authority().host();       -> 'github.com'\n  u.heirpart().path();                   -> '/webr3/URI'\n  u.querystring();                       -> '?query=string'\n  u.fragment();                          -> '#this'\n\nFurther, methods are exposed to handle complicated URIs:\n\n  u = new URI('http://github.com/a/b/c/d/../.././egg#s/../x');\n  u.isAbsolute();                        -> boolean\n  u.defrag();                            -> 'http://github.com/a/b/c/d/../.././egg'\n  u.toAbsolute();                        -> 'http://github.com/a/b/egg'\n  \nand to resolve relative URIs + URI References:\n \n  u = new URI('http://github.com/a/b/c/d'); \n  u.resolveReference('../.././n?x=y');   -> 'http://github.com/a/n?x=y'\n\n\nnode.js usage:\n\n  require('./uris');                              // require the file, and no, you don't need 'var uri ='\n  var u = new URI('http://github.com/webr3/URI'); // nothing's different\n  \n\nrunning the tests:\n\n  URI.Test(); // be sure to include uristest first\n  \n  \nNotes:\n - I *may* add case normalisation for segments which support it..\n - the file is called uris.js instead of uri.js because for some reason the line require('uri') makes\n   v8/node throw a wobbly..\n - validation is out of scope, couldn't possibly implement validation for every scheme..\n \n\nA few examples of some of the URIs supported:\n - ftp://ftp.is.co.za/rfc/rfc1808.txt\n - http://www.ietf.org:8080/rfc/rfc2396.txt\n - ldap://[2001:db8::7]:140/c=GB?objectClass?one\n - mailto:John.Doe@example.com\n - news:comp.infosystems.www.servers.unix\n - tel:+1-816-555-1212\n - telnet://192.0.2.16/\n - telnet://192.0.2.16:/\n - telnet://192.0.2.16:80/\n - urn:oasis:names:specification:docbook:dtd:xml:4.1.2\n - svn+ssh://data.fm/opt/repos/ssl/trunk\n - file:///dev/null",
  "readmeFilename": "README",
  "_id": "uri@0.1.0",
  "description": "URI Type for javascript ====================================================  - Supports all kinds of URI (URL, URN, any scheme).  - Relative URI Resolution  - All classes extend the native String implementation.  - Pure ECMA-262 implementation of URI spec (RFC-3986)  - Works Client or Server side, (V8 / node.js compatible).",
  "_from": "uri@0.1.0"
}
